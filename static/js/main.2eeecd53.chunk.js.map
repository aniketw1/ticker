{"version":3,"sources":["logo.svg","components/News.js","components/Stock.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["News","props","state","query","name","list","this","fetchNews","API_CALL","that","newsHeadline","fetch","then","response","json","data","key","push","setState","console","log","items","className","map","item","index","src","image","href","url","title","description","s","timestamp","Date","toLocaleDateString","undefined","dateStyle","source","React","Component","Stock","time","price","fetchStock","stockChartX","stockChartY","x","y","type","mode","marker","color","layout","width","height","Form","useState","setName","htmlFor","id","autoComplete","onChange","e","target","value","onClick","preventDefault","addTask","tickersInit","App","tickers","setTickers","stockitems","ticker","remainingTasks","filter","deleteTask","newsitems","newTask","nanoid","role","aria-labelledby","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAAe,I,gDC8GAA,M,kDA1GX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,MAAOF,EAAMG,KACbC,KAAM,IAJI,E,qDASlB,WACIC,KAAKC,UAAUD,KAAKJ,MAAMC,S,uBAG9B,SAAUA,GAEN,IACIK,EAAQ,iDAA6CL,EAA7C,mEACNM,EAAOH,KACTI,EAAe,GAEnBC,MAAMH,GACDI,MACG,SAASC,GACL,OAAOA,EAASC,UAGvBF,MACG,SAASG,GACL,IAAI,IAAIC,KAAOD,EACXL,EAAaO,KAAKF,EAAKC,IAE3BP,EAAKS,SAAS,CACVb,KAAMK,IAEVS,QAAQC,IAAI,gBAAiBX,EAAKJ,W,oBAMlD,WACI,IAEMgB,EAAQf,KAAKJ,MAAMG,KAGzB,OACI,qBAAKiB,UAAU,MAAf,SAEA,6BACKD,EAAME,KAAI,SAACC,EAAMC,GACd,OAAO,qBAAgBH,UAAU,OAA1B,UACH,qBAAKI,IAAKF,EAAKG,MAAOL,UAAU,cAChC,oBAAIA,UAAU,QAAd,SACI,mBAAGM,KAAMJ,EAAKK,IAAd,SAAoBL,EAAKM,UAE7B,mBAAGR,UAAU,cAAb,SACKE,EAAKO,cAEV,qBAAKT,UAAU,OAAf,SACI,kCAfDU,EAemBR,EAAKS,UAfnB,IAAIC,KAAKF,GAAGG,wBAAmBC,EAAW,CAAEC,UAAW,UAe3D,IAAoCb,EAAKc,OAAzC,WATQb,GANT,IAAAO,a,GA9CRO,IAAMC,W,iBC8DVC,E,kDA7DX,WAAYxC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,MAAOF,EAAMG,KACbsC,KAAM,GACNC,MAAO,IALG,E,qDASlB,WACIrC,KAAKsC,WAAWtC,KAAKJ,MAAMC,S,wBAG/B,SAAWA,GACP,IAAMM,EAAOH,KAETE,EAAQ,uFAAmFL,EAAnF,mBADI,oBAEZ0C,EAAc,GACdC,EAAc,GAElBnC,MAAMH,GACDI,MACG,SAASC,GACL,OAAOA,EAASC,UAGvBF,MACG,SAASG,GAEL,IAAI,IAAIC,KAAOD,EAAK,uBAChB8B,EAAY5B,KAAKD,GACjB8B,EAAY7B,KAAKF,EAAK,uBAAuBC,GAAK,YAGtDP,EAAKS,SAAS,CACVwB,KAAMG,EACNF,MAAOG,S,oBAO3B,WACI,OACE,cAAC,IAAD,CACE/B,KAAM,CACJ,CACEgC,EAAGzC,KAAKJ,MAAMwC,KACdM,EAAG1C,KAAKJ,MAAMyC,MACdM,KAAM,UACNC,KAAM,gBACNC,OAAQ,CAACC,MAAO,SAGpBC,OAAQ,CAACC,MAAO,IAAKC,OAAQ,IAAKzB,MAAM,GAAD,OAAKxB,KAAKJ,MAAMC,MAAhB,mC,GAxD/BqC,aCwCLgB,MAxCf,SAAcvD,GAAO,IAAD,EAEQwD,mBAAS,IAFjB,mBAETrD,EAFS,KAEHsD,EAFG,KAehB,OACA,iCACI,oBAAIpC,UAAU,gBAAd,SACI,uBAAOqC,QAAQ,iBAAiBrC,UAAU,YAA1C,8CAIJ,uBACI2B,KAAK,OACLW,GAAG,iBACHtC,UAAU,kBACVlB,KAAK,OACLyD,aAAa,MACbC,SAxBR,SAAsBC,GACnBL,EAAQK,EAAEC,OAAOC,UAyBhB,wBAAQhB,KAAK,SAAS3B,UAAU,2BAA2B4C,QAtB/D,SAAsBH,GAClBA,EAAEI,iBACFlE,EAAMmE,QAAQhE,GACdsD,EAAQ,KAmBR,wB,QCxBFW,EAAc,CAAC,CAACT,GAAI,EAAGxD,KAAK,QAAS,CAACwD,GAAG,EAAGxD,KAAK,SAgGxCkE,MA7Ff,WAAgB,IAAD,EAEiBb,mBAASY,GAF1B,mBAENE,EAFM,KAEGC,EAFH,OAGef,mBAAS,IAHxB,6BAiBb,IAAMgB,EAAaF,EAAQhD,KAAI,SAAAmD,GAAM,OACnC,sBAAKpD,UAAU,UAAf,UACE,sBAAKA,UAAU,UAAf,UACE,qBAAIsC,GAAIc,EAAOd,GAAItC,UAAU,aAA7B,UACGoD,EAAOtE,KADV,YAGA,yBACE6C,KAAK,SACL3B,UAAU,6BACV4C,QAAS,kBAfjB,SAAoBN,GAClB,IAAMe,EAAiBJ,EAAQK,QAAO,SAAAF,GAAM,OAAId,IAAOc,EAAOd,MAC9DY,EAAWG,GAaUE,CAAWH,EAAOd,KAHnC,oBAKS,sBAAMtC,UAAU,kBAAhB,SAAmCoD,EAAOtE,aAGrD,cAAC,EAAD,CAAOA,KAAMsE,EAAOtE,MAAWsE,EAAOd,UAIpCkB,EAAYP,EAAQhD,KAAI,SAACmD,GAAD,OAC5B,sBAAKpD,UAAU,QAAf,UACE,+BACGoD,EAAOtE,KADV,WAGA,cAAC,EAAD,CAAMA,KAAMsE,EAAOtE,OACnB,qBAAKkB,UAAU,qBAOnB,OACE,sBAAKA,UAAU,sBAAf,UAEE,sBAAKA,UAAU,SAAf,UACE,mDACA,sBAAKA,UAAU,cAAf,UACE,wBAAQA,UAAU,+BAAlB,SAAiD,6CACjD,wBAAQA,UAAU,+BAAlB,SAAiD,iDAIrD,sBAAKA,UAAU,OAAf,UAEE,sBAAKA,UAAU,aAAf,UACE,cAAC,EAAD,CAAM8C,QAzDd,SAAiBhE,GACf,IAAM2E,EAAU,CAAEnB,GAAI,QAAUoB,cAAU5E,KAAMA,GAChDoE,EAAW,CAACO,GAAF,mBAAcR,KACxBpD,QAAQC,IAAI,MAAOmD,MAwDb,qBAAKjD,UAAU,eAAf,SACE,oBACE2D,KAAK,OACL3D,UAAU,wCACV4D,kBAAgB,eAHlB,SAKGT,SAKP,qBAAKnD,UAAU,cAAf,SACE,sBAAKA,UAAU,cAAf,UACE,oBAAIsC,GAAG,eAAP,SACE,4CAEDkB,cChFEK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzE,MAAK,YAAkD,IAA/C0E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2eeecd53.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport './News.css';\n\nclass News extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            query: props.name,\n            list: []\n        }\n    }\n\n\n    componentDidMount() {\n        this.fetchNews(this.state.query);\n    }\n\n    fetchNews(query){\n\n        const API_KEY = 'JZ2cGukXpDFRSPmZubtZOUfV4EEa8_TA';\n        let API_CALL = `https://api.polygon.io/v1/meta/symbols/${query}/news?perpage=50&page=1&apiKey=JZ2cGukXpDFRSPmZubtZOUfV4EEa8_TA`\n        const that = this;\n        let newsHeadline = [];\n\n        fetch(API_CALL)\n            .then(\n                function(response){\n                    return response.json();\n                }\n            )\n            .then(\n                function(data){\n                    for(var key in data){\n                        newsHeadline.push(data[key]);\n                    }\n                    that.setState({\n                        list: newsHeadline\n                    })\n                    console.log('hard to admit', that.list)\n                }\n            )\n    }\n\n\n    render() {\n        const that = this;\n        const query = \"msft\";\n        const items = this.state.list;\n        const separateWords = s => s.replace(/[A-Z][a-z]+/g, '$& ').trim();\n        const formatDate = s => new Date(s).toLocaleDateString(undefined, { dateStyle: 'long' });\n        return (\n            <div className=\"app\">\n            \n            <ul>\n                {items.map((item, index) =>{\n                    return <li key={index} className=\"item\">\n                        <img src={item.image} className=\"thumbnail\"/>\n                        <h2 className=\"title\">\n                            <a href={item.url}>{item.title}</a>\n                        </h2>\n                        <p className=\"description\">\n                            {item.description}\n                        </p>\n                        <div className=\"meta\">\n                            <span>{formatDate(item.timestamp)} {item.source} </span>\n                        </div>\n                    </li>\n                })}\n            </ul>\n            </div>\n        );\n    }\n}\n\nfunction Item({ item }) {\n    const separateWords = s => s.replace(/[A-Z][a-z]+/g, '$& ').trim();\n    const formatDate = s => new Date(s).toLocaleDateString(undefined, { dateStyle: 'long' });\n    return (\n        <li className=\"item\">\n          {item.image &&\n            <img className=\"thumbnail\"\n              alt=\"\"\n              src={item.image?.thumbnail?.contentUrl}\n            />\n          }\n          <h2 className=\"title\">\n            <a href={item.url}>{item.name}</a>\n          </h2>\n          <p className=\"description\">\n            {item.description}\n          </p>\n          <div className=\"meta\">\n            <span>{formatDate(item.datePublished)}</span>\n            <span className=\"provider\">\n              {item.provider[0].image?.thumbnail &&\n                <img className=\"provider-thumbnail\"\n                  alt=\"\"\n                  src={item.provider[0].image.thumbnail.contentUrl + '&w=16&h=16'}\n                />\n              }\n              {item.provider[0].name}\n            </span>\n            {item.category &&\n              <span>{separateWords(item.category)}</span>\n            }\n          </div>\n        </li>\n    );\n}\n\nexport default News;","import React, { Component } from \"react\";\nimport Plot from 'react-plotly.js'\n\nclass Stock extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            query: props.name,\n            time: [],\n            price: []\n        }\n    }\n\n    componentDidMount(){\n        this.fetchStock(this.state.query);\n    }\n\n    fetchStock(query){\n        const that = this;\n        const API_KEY = 'NT2TLJEMKK8741F3';\n        let API_CALL = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${query}&apikey=${API_KEY}`\n        let stockChartX = [];\n        let stockChartY = [];\n\n        fetch(API_CALL)\n            .then(\n                function(response){\n                    return response.json();\n                }\n            )\n            .then(\n                function(data){\n                    // console.log('etf', data);\n                    for(var key in data['Time Series (Daily)']){\n                        stockChartX.push(key);\n                        stockChartY.push(data['Time Series (Daily)'][key]['1. open']);\n                    }\n\n                    that.setState({\n                        time: stockChartX,\n                        price: stockChartY\n                    });\n                    // console.log('kodak', stockChartY);\n                }\n            )\n    }\n\n    render() {\n        return (\n          <Plot\n            data={[\n              {\n                x: this.state.time,\n                y: this.state.price,\n                type: 'scatter',\n                mode: 'lines+markers',\n                marker: {color: 'red'},\n              }\n            ]}\n            layout={{width: 900, height: 600, title: `${this.state.query} Price For The Past Year`}}\n          />\n        );\n    }\n}\n\nexport default Stock;","import React, { useState } from \"react\";\n\n\nfunction Form(props){\n\n    const [name, setName] = useState(\"\");\n\n    function handleChange(e){\n       setName(e.target.value);\n    }\n    \n    function handleSubmit(e){\n        e.preventDefault();\n        props.addTask(name);\n        setName(\"\");\n    }\n\n   \n    return(\n    <form>\n        <h4 className=\"label-wrapper\">\n            <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n            Search Your Ticker Symbol Here\n            </label>\n        </h4>\n        <input\n            type=\"text\"\n            id=\"new-todo-input\"\n            className=\"input input__lg\"\n            name=\"text\"\n            autoComplete=\"off\"\n            onChange={handleChange}\n        />\n        <button type=\"submit\" className=\"btn btn__primary btn__lg\" onClick={handleSubmit}>\n            Search\n        </button>\n        </form>\n    );\n    \n}\n\n\n\nexport default Form;","// import 'bootstrap';\nimport React, { useState } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport News from './components/News.js'\nimport Stock from \"./components/Stock.js\";\nimport Form from \"./components/Form.js\";\nimport { nanoid } from \"nanoid\";\n\nconst tickersInit = [{id: 0, name:'msft'}, {id:1, name:'tsla'}];\n\n\nfunction App() {\n\n  const [tickers, setTickers] = useState(tickersInit);\n  const [search, setSearch] = useState('');\n\n  function addTask(name) {\n    const newTask = { id: \"todo-\" + nanoid(), name: name};\n    setTickers([newTask, ...tickers]);\n    console.log('all', tickers);\n  }\n\n  function deleteTask(id){\n    const remainingTasks = tickers.filter(ticker => id !== ticker.id);\n    setTickers(remainingTasks);\n  }\n\n  //Mapping tickers to react Stock components\n  const stockitems = tickers.map(ticker =>  ( \n    <div className=\"stocks1\">\n      <div className=\"wrapBtn\">\n        <h3 id={ticker.id} className=\"ticker_opt\">\n          {ticker.name} Price\n        </h3>\n        <button\n          type=\"button\"\n          className=\"btn btn__danger ticker_opt\"\n          onClick={() => deleteTask(ticker.id)}\n          >\n          Delete <span className=\"visually-hidden\">{ticker.name}</span>\n        </button>\n      </div>\n      <Stock name={ticker.name} key={ticker.id}/>\n    </div>\n  ));\n\n  const newsitems = tickers.map((ticker) =>   \n    <div className=\"news1\">\n      <h3>\n        {ticker.name} News\n      </h3>\n      <News name={ticker.name}/>\n      <div className=\"line_break\"></div>\n    </div>\n\n  );\n\n  \n\n  return (\n    <div className=\"todoapp stack-large\">\n\n      <div className=\"navbar\">\n        <h1>TICKER QUICKSCOPE</h1>\n        <div className=\"navbar_left\">\n          <button className=\"btn btn__primary btn__lg nvl\"><h5>Favorites</h5></button>\n          <button className=\"btn btn__primary btn__lg nvl\"><h5>Markets</h5></button>\n          \n        </div>\n      </div>\n      <div className=\"bigP\">\n      \n        <div className=\"test child\">\n          <Form addTask={addTask}/>\n      \n          <div className=\"charts child\">\n            <ul\n              role=\"list\"\n              className=\"todo-list stack-large stack-exception\"\n              aria-labelledby=\"list-heading\"\n            >\n              {stockitems}\n            </ul>\n            \n          </div>\n        </div>\n        <div className=\"test1 child\">\n          <div className=\"news_panel \">\n            <h2 id=\"list-heading\">\n              <strong>NEWS</strong>\n            </h2>\n            {newsitems}\n          </div>\n          \n        </div>\n      </div>\n\n\n    </div>\n    \n  );\n}\n\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}